@model PotatoPortail.Models.eSports.Jeu

@{
    ViewBag.Titre = "Informations sur " + ViewBag.nomJeu;
    <input type="hidden" id="tableRecherche" name="tableRecherche" value="Jeu">
}

<div class="container">

<div class="box">

<header class="light-header">
    <h1>Informations relatives à «@ViewBag.nomJeu»</h1>
</header>

<div>
<div class="element">
    @Html.LabelFor(model => model.Description)
    @if (Model.Description != null)
    {
        @Html.DisplayFor(model => model.Description)
    }
    else
    {
        @:Aucune description n'a été fournie pour @Model.NomJeu
    }
</div>

<div class="element">
    @Html.LabelFor(model => model.UrlReference)

    @if (Model.UrlReference != null)
    {
        if (Model.UrlReference.Substring(0, 4) == "http")
        {
            <a href="@Model.UrlReference"> @Html.DisplayFor(model => model.UrlReference) </a>
        }
        else
        {
            <a href="@($"http://{Model.UrlReference}")"> @Html.DisplayFor(model => model.UrlReference)</a>
        }
    }
    else
    {
        @:Aucune adresse URL de référence n'a été fournie pour @Model.NomJeu
    }
</div>
@if (Model.Caracteristique.Count == 0)
{
    <header class="light-header">
        <h3>Aucune caractéristique n'est actuellement associée à «@ViewBag.nomJeu».</h3>
    </header>
}
else if (Model.Caracteristique.Count == 1)
{
    <header class="light-header">
        <h3>Caractéristique associée à «@ViewBag.nomJeu» : </h3>
    </header>

    foreach (var carac in Model.Caracteristique)
    {
        <div class="element">
            @Html.Label(carac.NomCaracteristique)

            @if (carac.Item.Count == 0)
            {
                @:Aucun item n'est associé à cette caractéristique.
            }
            else
            {
                foreach (var item in carac.Item.OrderBy(i => i.NomItem))
                {
                    @: @item.NomItem
                    <br/>
                }
            }
        </div>
    }
}
else
{
    <header class="light-header">
        <h3>Caractéristiques associées à «@ViewBag.nomJeu» : </h3>
    </header>

    foreach (var carac in Model.Caracteristique.OrderBy(c => c.NomCaracteristique))
    {
        <div class="element">
            @Html.Label(carac.NomCaracteristique)

            @if (carac.Item.Count == 0)
            {
                @:Aucun item n'est associé à cette caractéristique.
            }
            else
            {
                foreach (var item in carac.Item.OrderBy(i => i.NomItem))
                {
                    @: @item.NomItem
                    <br/>
                }
            }
        </div>
    }
}
<hr class="end-div"/>
@if (Model.Equipe.All(e => e.EstMonoJoueur != false))
{
    <header class="light-header">
        <h3>Aucune équipe n'est actuellement associée à «@ViewBag.nomJeu».</h3>
    </header>
}
else if ((Model.Equipe.Where(e => e.EstMonoJoueur == false)).Count() == 1)
{
    <header class="light-header">
        <h3>Équipe associée à «@ViewBag.nomJeu» : </h3>
    </header>

    foreach (var Equipe in Model.Equipe.Where(e => e.EstMonoJoueur == false))
    {
        <div class="element">

            @if (User.IsInRole("Admin eSports"))
            {
                <a href='@Url.Action("Modifier", "Equipe", new {id = Equipe.Id, nomEquipe = Equipe.NomEquipe, nomJeu = Equipe.Jeu.NomJeu, rappelleDetailsJeu = true})'>
                    @Equipe.NomEquipe
                </a>
            }
            else
            {
                @Equipe.NomEquipe
            }

            @if (Equipe.Joueurs.Count == 0)
            {
                <br/>
                @: Aucun joueur.
            }
            else if (Equipe.Joueurs.Count == 1)
            {
                <table class="cool-table">
                    <tr>
                        <th class="action-cell-header">
                            <b>Pseudo</b>
                        </th>
                        <th class="action-cell-header">
                            <b>Nom de l'étudiant</b>
                        </th>
                        <th class="action-cell-header">
                            <b>Nombre de Jeu joués</b>
                        </th>
                        <th class="action-cell-header">
                            <b>Adresse courriel</b>
                        </th>
                    </tr>
                    @foreach (var joueur in Equipe.Joueurs)
                    {
                        <tr>
                            <td class="action-cell">
                                @joueur.PseudoJoueur
                            </td>
                            <td class="action-cell">
                                @joueur.MembreESports.nomComplet
                            </td>
                            <td class="action-cell">
                                @joueur.NombreJeuJoueur
                            </td>
                            <td class="action-cell">
                                @joueur.Profil.Courriel
                            </td>
                        </tr>
                    }
                </table>
            }
            else
            {
                <table class="cool-table">
                    <tr>
                        <th class="action-cell-header">
                            <b>Pseudo</b>
                        </th>
                        <th class="action-cell-header">
                            <b>Nom de l'étudiant</b>
                        </th>
                        <th class="action-cell-header">
                            <b>Nombre de Jeu joués</b>
                        </th>
                        <th class="action-cell-header">
                            <b>Adresse courriel</b>
                        </th>
                    </tr>
                    @foreach (var joueur in Equipe.Joueurs.OrderBy(j => j.PseudoJoueur))
                    {
                        <tr>
                            <td class="action-cell">
                                @joueur.PseudoJoueur
                            </td>
                            <td class="action-cell">
                                @joueur.MembreESports.nomComplet
                            </td>
                            <td class="action-cell">
                                @joueur.NombreJeuJoueur
                            </td>
                            <td class="action-cell">
                                @joueur.Profil.Courriel
                            </td>
                        </tr>
                    }
                </table>
            }
        </div>
    }
}
else
{
    if ((Model.Equipe.Where(e => e.EstMonoJoueur == false)).Count() == 1)
    {
        <header class="light-header">
            <h3>Équipe associée à «@ViewBag.nomJeu» : </h3>
        </header>
    }
    else
    {
        <header class="light-header">
            <h3>Équipes associées à «@ViewBag.nomJeu» : </h3>
        </header>
    }

    foreach (var Equipe in Model.Equipe.OrderBy(e => e.NomEquipe).Where(e => e.EstMonoJoueur == false))
    {
        <div class="element">

            @if (User.IsInRole("Admin eSports"))
            {
                <a href='@Url.Action("Modifier", "Equipe", new {id = Equipe.Id, nomEquipe = Equipe.NomEquipe, nomJeu = Equipe.Jeu.NomJeu, rappelleDetailsJeu = true})'>
                    @Equipe.NomEquipe
                </a>
            }
            else
            {
                @Equipe.NomEquipe
            }

            @if (Equipe.Joueurs.Count == 0)
            {
                <br/>
                @: Aucun joueur.
            }
            else if (Equipe.Joueurs.Count == 1)
            {
                <table class="cool-table">
                    <tr>
                        <th class="action-cell-header">
                            <b>Pseudo</b>
                        </th>
                        <th class="action-cell-header">
                            <b>Nom de l'étudiant</b>
                        </th>
                        <th class="action-cell-header">
                            <b>Nombre de Jeu joués</b>
                        </th>
                        <th class="action-cell-header">
                            <b>Adresse courriel</b>
                        </th>
                    </tr>
                    @foreach (var joueur in Equipe.Joueurs)
                    {
                        <tr>
                            <td class="action-cell">
                                @joueur.PseudoJoueur
                            </td>
                            <td class="action-cell">
                                @joueur.MembreESports.nomComplet
                            </td>
                            <td class="action-cell">
                                @joueur.NombreJeuJoueur
                            </td>
                            <td class="action-cell">
                                @joueur.Profil.Courriel
                            </td>
                        </tr>
                    }
                </table>
            }
            else
            {
                <table class="cool-table">
                    <tr>
                        <th class="action-cell-header">
                            <b>Pseudo</b>
                        </th>
                        <th class="action-cell-header">
                            <b>Nom de l'étudiant</b>
                        </th>
                        <th class="action-cell-header">
                            <b>Nombre de Jeu joués</b>
                        </th>
                        <th class="action-cell-header">
                            <b>Adresse courriel</b>
                        </th>
                    </tr>
                    @foreach (var joueur in Equipe.Joueurs.OrderBy(j => j.PseudoJoueur))
                    {
                        <tr>
                            <td class="action-cell">
                                @joueur.PseudoJoueur
                            </td>
                            <td class="action-cell">
                                @joueur.MembreESports.nomComplet
                            </td>
                            <td class="action-cell">
                                @joueur.NombreJeuJoueur
                            </td>
                            <td class="action-cell">
                                @joueur.Profil.Courriel
                            </td>
                        </tr>
                    }
                </table>
            }
        </div>
    }
}

</div>


<div class="menu-flottant">
    <a class="fancy-button blanc" href="/Jeu/Index">
        <span class="glyphicon glyphicon-triangle-left"></span>
        Retour
    </a>
    @if (User.IsInRole("Admin eSports"))
    {
        <a class="fancy-button blanc" href="@Url.Action("Modifier", "Jeu", new {id = Model.Id, nomJeu = Model.NomJeu})">
            Mettre à jour «@ViewBag.nomJeu»
        </a>
    }
</div>

<hr class="end-div"/>
</div>

</div>