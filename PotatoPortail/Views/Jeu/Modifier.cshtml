@model PotatoPortail.Models.eSports.Jeu

@{
    ViewBag.Titre = "Modification de " + ViewBag.NomJeu;
    <input type="hidden" id="tableRecherche" name="tableRecherche" value="Jeu">
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new {@class = "text-danger"})
    @Html.HiddenFor(model => model.Id)

    <div class="container">
        <div class="form-box">
            <header class="light-header">
                <h1>Modification d'un jeu</h1>
            </header>
            <div class="form-group">
                <div class="row">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.NomJeu)
                        @Html.TextBoxFor(model => model.NomJeu, new {@class = "form-control"})
                        @Html.ValidationMessageFor(model => model.NomJeu, "", new {@class = "text-danger"})
                    </div>
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.UrlReference)
                        @Html.TextBoxFor(model => model.UrlReference, new {@class = "form-control"})
                        @Html.ValidationMessageFor(model => model.UrlReference, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Description)
                @Html.TextAreaFor(model => model.Description, new {@rows = "3", @maxlength = "500", @class = "form-control"})
                @Html.ValidationMessageFor(model => model.Description, "", new {@class = "text-danger"})
            </div>
            <div class="form-group">
                @Html.HiddenFor(model => model.Abreviation)
                @Html.HiddenFor(model => model.Abreviation, new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.Abreviation, "", new {@class = "text-danger"})
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="field-box">
                        <div class="row">
                            <div class="col-md-9">
                                <p>Statut du jeu</p>
                                <hr/>
                                <div class="form-group">
                                    @Html.DropDownListFor(model => model.IdStatut, (IEnumerable<SelectListItem>) ViewBag.Statuts, new {@class = "form-control"})
                                    @Html.ValidationMessageFor(model => model.IdStatut, "", new {@class = "text-danger"})
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <input type="submit" value="Confirmer les modifications" class="fancy-button"/>
            <div class="menu-flottant">
                <a class="fancy-button blanc" href='@Url.Action("Index", "Jeu")'>
                    <span class="glyphicon glyphicon-triangle-left"></span>
                    Retour
                </a>
                <a class="fancy-button blanc" href='@Url.Action("Details", "Jeu", new {id = Model.Id, NomJeu = Model.NomJeu})'>

                    <span class="glyphicon glyphicon-info-sign"></span>
                    Accéder aux détails
                </a>
                <a class="fancy-button blanc" href='@Url.Action("Creation", "Caracteristique", new {JeuId = Model.Id, NomJeu = Model.NomJeu})'>
                    <span class="glyphicon glyphicon-info-sign"></span>
                    Ajouter une caractéristique
                </a>
                @if (Model.Statut.NomStatut == "Inactif")
                {
                    <a class="fancy-button rouge blanc" href='@Url.Action("Supprimer", new {id = Model.Id, NomJeu = Model.NomJeu})'>
                        <span class="glyphicon glyphicon-trash"></span>
                        Supprimer
                    </a>
                }
            </div>
            <a class="fancy-button blanc" href='@Url.Action("Creation", "Caracteristique", new {JeuId = Model.Id, NomJeu = Model.NomJeu})'>
                <span class="glyphicon glyphicon-info-sign"></span>
                Ajouter une caractéristique
            </a>
        </div>
        <hr class="end-div"/>
        @if (Model.Caracteristique.Count > 0)
        {
            <div class="form-box">
                <header class="light-header">
                    @if (Model.Caracteristique.Count == 1)
                    {
                        <h1>Caractéristique associée à «@Model.NomJeu» : </h1>
                    }
                    else if (Model.Caracteristique.Count > 1)
                    {
                        <h1>Caractéristiques associées à «@Model.NomJeu» : </h1>
                    }
                </header>
                @foreach (var carac in Model.Caracteristique)
                {
                    <div class="row">
                        <div class="col-md-11">
                            <table class="cool-table">
                                <tr>
                                    <th colspan="1" class="action-cell-header">@carac.NomCaracteristique</th>
                                    <th colspan="1" class="action-cell-header">
                                        <b>Supprimer</b>
                                    </th>
                                </tr>
                                @using (Html.BeginForm("EditItem", "Jeu", FormMethod.Post))
                                {
                                    foreach (var item in carac.Item)
                                    {
                                        string id = "carac_" + carac.Id + "_item" + item.Id;
                                        <tr id="@id">
                                            <td colspan="1" class="action-cell" onclick="window.location.href = '@Url.Action("Modifier", "Item", new {item.Id, carac.NomCaracteristique, Model.NomJeu})'">
                                                @Html.DisplayFor(model => item.NomItem)
                                            </td>
                                            <td colspan="1" class="action-cell">
                                                <a href='@Url.Action("Supprimer", "Item", new {id = item.Id, NomJeu = Model.NomJeu})'>
                                                    <span class="glyphicon glyphicon-trash"></span>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                    <tr id="tr_bouton_plus_@carac.Id">
                                        <td colspan="1" class="action-cell">

                                            @{
                                                var nbrItem = carac.Item.Count - 1;
                                            }
                                            @if (nbrItem < 0)
                                            {
                                                <a id="bonton_plus_null" onclick='ajoutPPrincipal("@carac.Id", this.Id)'>
                                                    <span class="glyphicon glyphicon-plus"></span>
                                                </a>
                                            }
                                            else
                                            {
                                                <a id="@carac.Item.ElementAt(nbrItem).Id"
                                                   onclick='ajoutPPrincipal("@carac.Id", this.Id)'>
                                                    <span class="glyphicon glyphicon-plus"></span>
                                                </a>
                                            }
                                        </td>
                                        <td class="action-cell"></td>
                                    </tr>
                                }
                            </table>
                        </div>
                        <div class="col-md-1">
                            <a class="fancy-button blanc rouge" href="@Url.Action("Supprimer", "Caracteristique", new {carac.Id, carac.Jeu.NomJeu})'">
                                <span class="glyphicon glyphicon-trash"></span>
                            </a>
                        </div>
                    </div>
                    <hr class="end-div"/>
                }
            </div>
            <hr class="end-div"/>
        }
    </div>
}
<script>
    function ajoutPPrincipal(caracID, numeroItem) {
        const itemId = numeroItem + 1;
        const souspoint = `<tr id="carac_${caracID}_item${itemId
            }"><td contenteditable="true" colspan="1">entrer le nom de litem</td><td colspan="1" class="action-cell"> <a onclick="sauvegarder(${
            caracID
            },this.parentNode.parentNode.innerText)"><span class="glyphicon glyphicon-floppy-disk"></span></a></td></tr>`;
        document.getElementById("tr_bouton_plus_" + caracID).insertAdjacentHTML("beforebegin", souspoint);
    }

    function sauvegarder(caracId, nomItem) {
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("EditItem", "Jeu")',
            data: JSON.stringify({ Item: { CaracteristiqueId: caracId, nomItem: nomItem } }),
            success: function(data) {
                window.location.href = '@Url.Action("Modifier", new {id = Model.Id, NomJeu = Model.NomJeu})';
            },
            error: function(resultat, statut, erreur) {
                alert(erreur);
            }
        });
    }
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}