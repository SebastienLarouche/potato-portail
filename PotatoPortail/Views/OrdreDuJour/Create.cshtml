@model PotatoPortail.ViewModels.OrdresDuJour.OrdreDuJourViewModel
@{
    ViewBag.Titre = "Création d'un nouvel ordre du jour";
}
<script src="~/Scripts/ajoutDynamique.js" type="text/javascript"></script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="container">
        <div class="form-box">
            <header class="light-header">
                <h1>@ViewBag.Titre</h1>
            </header>

            <div class="form-group">
                @Html.Label("Titre de l'ordre du jour")
                @Html.TextBoxFor(m => m.OrdreDuJour.TitreOdJ, new { @class = "form-control small" })
                @Html.ValidationMessageFor(m => m.OrdreDuJour.TitreOdJ, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.Label("Date")
                @Html.EditorFor(m => m.OrdreDuJour.DateOdJ, new { htmlAttributes = new { @type = "date", @class = "form-control date-picker small", @Value = "yyyy-mm-dd", @id = "dateReunion" } })
                @Html.ValidationMessageFor(m => m.OrdreDuJour.DateOdJ, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.Label("Heure de début de la réunion")
                @Html.TextBoxFor(m => m.OrdreDuJour.HeureDebutReunion, new { @class = "form-control small" })
                @Html.ValidationMessageFor(m => m.OrdreDuJour.HeureDebutReunion, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.Label("Heure de fin de la réunion")
                @Html.TextBoxFor(m => m.OrdreDuJour.HeureFinReunion, new { @class = "form-control small" })
                @Html.ValidationMessageFor(m => m.OrdreDuJour.HeureFinReunion, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.Label("Lieu de la réunion")
                @Html.DropDownListFor(x => x.OrdreDuJour.LieuReunionODJ, new SelectList(Model.ListLieux, "Text", "Value"), htmlAttributes: new { @class = "form-control small" })
                @Html.ValidationMessageFor(x => x.OrdreDuJour.LieuReunionODJ, "", new { @class = "text-danger" })
            </div>
            <div id="dragdropPP">
                @Html.Label("Points principaux")
                @{ int cpt = 0;}
                @foreach(var item in Model.OrdreDuJour.SujetPointPrincipal)
                {
                    <div class="form-group">
                    @Html.EditorFor(model => Model.SujetPointPrincipal[cpt].SujetPoint, new { htmlAttributes = new { @class = "form-control", @Value = item.SujetPoint } })
                    @Html.ValidationMessageFor(model => item.SujetPoint, "", new { @class = "text-danger" })
                    <ul id="listSP0">
                        <a class="fancy-button" id="btnPlus_@cpt" onclick="ajoutSPoint(this.id,@cpt)"><span class="glyphicon glyphicon-plus"></span></a>
                    </ul>
                    </div>
                    cpt++;
                }

                @*<div class="form-group">
                    @Html.EditorFor(model => Model.sujetPointPrincipal[0].SujetPoint, new { htmlAttributes = new { @class = "form-control", @Value = "Présentation et acceptation de l'ordre du jour" } })
                    @Html.ValidationMessageFor(model => Model.sujetPointPrincipal[0].SujetPoint, "", new { @class = "text-danger" })
                    <ul id="listSP0">
                        <a class="fancy-button" id="btnPlus1" onclick="ajoutSPoint(this.id,0)"><span class="glyphicon glyphicon-plus"></span></a>
                    </ul>
                </div>

                <div class="form-group">
                    @Html.EditorFor(model => Model.sujetPointPrincipal[1].SujetPoint, new { htmlAttributes = new { @class = "form-control", @Value = "Approbation des procès-verbaux" } })
                    @Html.ValidationMessageFor(model => Model.sujetPointPrincipal[1].SujetPoint, "", new { @class = "text-danger" })
                    <ul id="listSP0">
                        <a class="fancy-button" id="btnPlus2" onclick="ajoutSPoint(this.id,1)"><span class="glyphicon glyphicon-plus"></span></a>
                    </ul>
                </div>

                <div class="form-group">
                    @Html.EditorFor(model => Model.sujetPointPrincipal[2].SujetPoint, new { htmlAttributes = new { @class = "form-control", @Value = "Information" } })
                    @Html.ValidationMessageFor(model => Model.sujetPointPrincipal[2].SujetPoint, "", new { @class = "text-danger" })
                    <ul id="listSP0">
                        <a class="fancy-button" id="btnPlus3" onclick="ajoutSPoint(this.id,2)"><span class="glyphicon glyphicon-plus"></span></a>
                    </ul>
                </div>

                <div class="form-group">
                    @Html.EditorFor(model => Model.sujetPointPrincipal[3].SujetPoint, new { htmlAttributes = new { @class = "form-control", @Value = "Varia" } })
                    @Html.ValidationMessageFor(model => Model.sujetPointPrincipal[3].SujetPoint, "", new { @class = "text-danger" })
                    <ul id="listSP0">
                        <a class="fancy-button" id="btnPlus4" onclick="ajoutSPoint(this.id,3)"><span class="glyphicon glyphicon-plus"></span></a>
                    </ul>
                </div>*@
            </div>
            @*<div class="form-group">
                @Html.LabelFor(m => m.ordreDuJour.IdModeleOrdreDuJour)
                @Html.TextBoxFor(m => m.ordreDuJour.IdModeleOrdreDuJour, new { @class = "form-control small" })
                @Html.ValidationMessageFor(m => m.ordreDuJour.IdModeleOrdreDuJour, "", new { @class = "text-danger" })
            </div>*@


            <hr />
            <input type="submit" value="Créer" class="fancy-button" />
            <div class="fancy-button rouge" onclick="location.href='@Url.Action("Index", "OrdreDuJour")'">Annuler</div>

        </div>
    </div>
}
@*Console Admin*@

@*<div class="super-view">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.ordreDuJour.TitreOdJ, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ordreDuJour.TitreOdJ, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ordreDuJour.TitreOdJ, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ordreDuJour.DateOdJ, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.ordreDuJour.DateOdJ, new { @type = "date", @class = "form-control date-picker", @Value = "yyyy-mm-dd", @id = "dateReunion" })
                        @Html.ValidationMessageFor(model => model.ordreDuJour.DateOdJ, "", new { @class = "text-danger" })
                    </div>
                </div>
                <script>
                    /*$(document).ready(function () {
                        $("#ordreDuJour.DateOdJ").datepicker({
                            dateFormat: "dd-mm-yy",
                            minDate: -0,
                            maxDate: "+0M +0D"
                        });
                    });*/
                    /*$(document).ready(function () {
                        $("#ordreDuJour.DateOdJ").datepicker().data.minDate = 0;
                    });*/
                </script>
                <div class="form-group">
                    @Html.LabelFor(model => model.ordreDuJour.HeureDebutReunion, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ordreDuJour.HeureDebutReunion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ordreDuJour.HeureDebutReunion, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ordreDuJour.HeureFinReunion, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ordreDuJour.HeureFinReunion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ordreDuJour.HeureFinReunion, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.ordreDuJour.LieuReunionODJ, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.DropDownListFor(x => x.ordreDuJour.LieuReunionODJ, new SelectList(Model.listLieux, "Text", "Value"), htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.ordreDuJour.LieuReunionODJ, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="form-group">
                        @Html.LabelFor(model => Model.sujetPointPrincipal[0].SujetPoint, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => Model.sujetPointPrincipal[0].SujetPoint, new { htmlAttributes = new { @class = "form-control", @Value = "Présentation et acceptation de l'ordre du jour" } })
                            @Html.ValidationMessageFor(model => Model.sujetPointPrincipal[0].SujetPoint, "", new { @class = "text-danger" })
                            <ul id="listSP0">
                                <a class="fancy-button" id="btnPlus1" onclick="addSPoint(this.id,0)"><span class="glyphicon glyphicon-plus"></span></a>
                            </ul>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-10" style="float:right;">
                            @Html.EditorFor(model => Model.sujetPointPrincipal[1].SujetPoint, new { htmlAttributes = new { @class = "form-control", @Value = "Approbation des procès-verbaux" } })
                            @Html.ValidationMessageFor(model => Model.sujetPointPrincipal[1].SujetPoint, "", new { @class = "text-danger" })
                            <ul id="listSP1">
                                <a class="fancy-button" id="btnPlus2" onclick="addSPoint(this.id,1)"><span class="glyphicon glyphicon-plus"></span></a>
                                <a class="fancy-button rouge" id="btnPlus2" onclick="removeSPoint(this.id, 1)"><span class="glyphicon glyphicon-trash"></span></a>
                            </ul>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-10" style="float:right;">
                            @Html.EditorFor(model => Model.sujetPointPrincipal[2].SujetPoint, new { htmlAttributes = new { @class = "form-control", @Value = "Information" } })
                            @Html.ValidationMessageFor(model => Model.sujetPointPrincipal[2].SujetPoint, "", new { @class = "text-danger" })
                            <ul id="listSP2">
                                <a class="fancy-button" id="btnPlus3" onclick="addSPoint(this.id,2)"><span class="glyphicon glyphicon-plus"></span></a>
                                <a class="fancy-button rouge" id="btnPlus3" onclick="removeSPoint(this.id, 2)"><span class="glyphicon glyphicon-trash"></span></a>
                            </ul>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-10" style="float:right;">
                            <input id="ajoutPP" type="button" onclick="ajoutPPrincipal(this.id,1)" value="Ajout d'un sujet" class="fancy-button" />
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-10" style="float:right;">
                            @Html.EditorFor(model => Model.sujetPointPrincipal[3].SujetPoint, new { htmlAttributes = new { @class = "form-control", @Value = "Varia" } })
                            @Html.ValidationMessageFor(model => Model.sujetPointPrincipal[3].SujetPoint, "", new { @class = "text-danger" })
                            <ul id="listSP3">
                                <a class="fancy-button" id="btnPlus4" onclick="addSPoint(this.id,3)"><span class="glyphicon glyphicon-plus"></span></a>
                                <a class="fancy-button rouge" id="btnPlus4" onclick="removeSPoint(this.id, 3)"><span class="glyphicon glyphicon-trash"></span></a>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <hr />
                        <input type="submit" value="Créer" class="fancy-button" />
                    </div>
                </div>
            </div>
        }

        <div class="menu-flottant">
            <a class="fancy-button blanc" href='@Url.Action("Index", "OrdreDuJour")'><span class="glyphicon glyphicon-triangle-left"></span> Retour</a>
        </div>
    </div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
