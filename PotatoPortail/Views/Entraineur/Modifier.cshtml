@model PotatoPortail.Models.eSports.Entraineur

@{
    ViewBag.Titre = "Modification d'un entraîneur";
    <input type="hidden" id="tableRecherche" name="tableRecherche" value="Entraineur">
}

<div class="container">
    <div class="form-box">

        <header class="light-header">
            <h1>Modification d'un entraîneur</h1>
        </header>


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)

                <div class="form-group">
                    <div class="row">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.PrenomEntraineur)
                            @Html.EditorFor(model => model.PrenomEntraineur, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PrenomEntraineur, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-6">
                            @Html.LabelFor(model => model.NomEntraineur)
                            @Html.EditorFor(model => model.NomEntraineur, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NomEntraineur, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.PseudoEntraineur)
                            @Html.EditorFor(model => model.PseudoEntraineur, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PseudoEntraineur, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-6">
                            @Html.LabelFor(model => model.NumeroTelephone)
                            @Html.EditorFor(model => model.NumeroTelephone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NumeroTelephone, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.AdresseCourriel)
                            @Html.EditorFor(model => model.AdresseCourriel, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AdresseCourriel, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="menu-flottant">
                    <a class="fancy-button blanc" href="@Url.Action("Index","Entraineur")">
                        <span class="glyphicon glyphicon-triangle-left"></span>
                        Annuler
                    </a>
                    <input type="submit" value="Confirmer les modifications" class="fancy-button blanc" />
                    <a class="fancy-button rouge blanc" href="@Url.Action("Supprimer", "Entraineur", new { id = Model.Id })">
                        <span class="glyphicon glyphicon-trash"></span>
                        Supprimer
                    </a>
                </div>
            </div>
        }


    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
