@model PotatoPortail.Models.DevisMinistere
@{
    ViewBag.Titre = "Modifier un devis ministériel";
    <input type="hidden" id="tableRecherche" name="tableRecherche" value="DevisMinistere">
}
@using (Html.BeginForm("Modifier", "DevisMinistere", FormMethod.Post, new {enctype = "multipart/form-data"}))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.IdDevis)
    @Html.HiddenFor(m => m.Discipline)
    @Html.HiddenFor(m => m.Annee)
    @Html.HiddenFor(m => m.CodeSpecialisation)
    @Html.HiddenFor(m => m.DocMinistere)
    <div class="container">
        <div class="form-box">
            <header class="light-header">
                <h1>@ViewBag.Titre</h1>
                <h3>@Html.DisplayFor(m => m.Nom)</h3>
            </header>
            @Html.ValidationSummary(true, "", new {@class = "text-danger"})
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Specialisation)
                        @Html.TextBoxFor(m => m.Specialisation, new {@maxlength = "30", @class = "form-control"})
                        @Html.ValidationMessageFor(m => m.Specialisation, "", new {@class = "text-danger"})
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Sanction)
                        @Html.TextBoxFor(m => m.Sanction, new {@maxlength = "50", @class = "form-control"})
                        @Html.ValidationMessageFor(m => m.Sanction, "", new {@class = "text-danger"})
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.NbUnite)
                        @Html.TextBoxFor(m => m.NbUnite, new {@Type = "text", @maxlength = "8", @class = "form-control"})
                        @Html.ValidationMessageFor(m => m.NbUnite, "", new {@class = "text-danger"})
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Condition)
                        @Html.TextBoxFor(m => m.Condition, new {@maxlength = "300", @class = "form-control"})
                        @Html.ValidationMessageFor(m => m.Condition, "", new {@class = "text-danger"})
                    </div>
                    <div class="element">
                        @Html.LabelFor(m => m.DocMinistere)
                        <input type="file" id="pdf" name="docMinistere" class="inputfile" accept="application/pdf"/>
                        <label for="pdf" class="file-button fancy-button rouge">
                            <span class="upload glyphicon glyphicon-download-alt"></span>
                            <span class="filename">
                                @(Model.DocMinistere == null ? @Html.Raw("Téléverser un PDF") : @Html.DisplayFor(m => m.DocMinistere))
                            </span>
                        </label>
                        <p>@Html.ValidationMessage("PDF", new {@class = "text-danger"})</p>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="field-box">
                        <p>Heures</p>
                        <hr/>
                        <div class="form-group">
                            @Html.LabelFor(m => m.NbHeureFrmGenerale)
                            @Html.TextBoxFor(m => m.NbHeureFrmGenerale, new {@type = "number", @min = "0", @step = "10", @maxlength = "4", @class = "form-control small"})
                            @Html.ValidationMessageFor(m => m.NbHeureFrmGenerale, "", new {@class = "text-danger"})
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.NbHeureFrmSpecifique)
                            @Html.TextBoxFor(m => m.NbHeureFrmSpecifique, new {@type = "number", @min = "0", @step = "10", @maxlength = "4", @class = "form-control small"})
                            @Html.ValidationMessageFor(m => m.NbHeureFrmSpecifique, "", new {@class = "text-danger"})
                        </div>

                    </div>
                </div>
            </div>
            <hr/>
            <input type="submit" value="Enregistrer" class="fancy-button"/>
            <a class="fancy-button rouge" href='@Url.Action("Info", "DevisMinistere", new {idDevis = Model.IdDevis})'>Annuler</a>
        </div>
    </div>
}
@Scripts.Render("~/Scripts/jquery.custom-file-input.js")