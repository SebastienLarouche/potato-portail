@model PotatoPortail.ViewModels.eSports.ModifierEquipeViewModel
@{
    ViewBag.Titre = "Modification d'équipe";
    <input type="hidden" id="tableRecherche" name="tableRecherche" value="Equipe">
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="container">
        <div class="form-box">
            <div class="row">
                <header class="light-header">
                    <h1>Modification de l'équipe «@Model.NomEquipe» (@Model.Jeu.NomJeu)</h1>
                </header>
                <div class="form-group">
                    <div class="col-md-6">
                        @Html.Label("Nouveau nom")
                        @Html.TextBoxFor(model => model.NomEquipe, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.NomEquipe, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    @Html.HiddenFor(model => model.IdJeu)
                    @Html.HiddenFor(model => model.IdJeu, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IdJeu, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="field-box">
                        <div class="row">
                            <div class="col-md-9">
                                <p>Assigner un entraineur</p>
                                <hr />
                                <div class="form-group">
                                    @Html.DropDownListFor(model => model.Entraineurs, (IEnumerable<SelectListItem>)ViewBag.Entraineurs, new { @id = "entraineur", @class = "form-control", @onchange = "ajouterEntraineur()" })
                                    @Html.ValidationMessageFor(model => model.Entraineurs, "", new { @class = "text-danger" })
                                </div>
                                <div id="entraineurBox">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="field-box">
                        <div class="row">
                            <div class="col-md-9">
                                <p>Assigner des joueurs</p>
                                <hr />
                                <div class="form-group">
                                    @Html.DropDownListFor(model => model.Joueurs, (IEnumerable<SelectListItem>)ViewBag.Joueurs, new { @id = "joueurs", @class = "form-control", @onchange = "ajouterJoueur()" })
                                    @Html.ValidationMessageFor(model => model.Joueurs, "", new { @class = "text-danger" })
                                </div>
                                <div id="joueursBox">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="menu-flottant">
                <a class="fancy-button blanc" href='@Url.Action("Index","Equipe")'>
                    <span class="glyphicon glyphicon-triangle-left"></span>
                    Annuler
                </a>
                @if (ViewBag.rappelleDetailsJeu == true)
                {
                    <a class="fancy-button blanc" href='@Url.Action("Details","Jeu", new { id = Model.IdJeu, nomJeu = Model.Jeu.NomJeu})'>
                        <span class="glyphicon glyphicon-triangle-left"></span>
                        Retour aux détails de @Model.Jeu.NomJeu
                    </a>
                }
                <input type="submit" value="Mettre à jour «@Model.NomEquipe»" class="fancy-button blanc" />
                <a class="fancy-button rouge blanc" href='@Url.Action("Supprimer", "Equipe", new { id = Model.EquipeId, nomEquipe = Model.NomEquipe, nomJeu = Model.Jeu.NomJeu })'>
                    <span class="glyphicon glyphicon-trash"></span>
                    Supprimer
                </a>
            </div>
        </div>
    </div>
}
@section Scripts {
    <script>
        $(document).ready(function () {
            initEntraineurDropDown();
            initJoueurDropDown();
            @foreach (var entraineur in Model.Entraineurs)
            {
                @:chargerEntraineur("@entraineur.PseudoEntraineur");
            }
            @foreach (var joueur in Model.Joueurs)
            {
                @:chargerJoueur("@joueur.PseudoJoueur");
            }
        });
    </script>
    <script src="@Url.Content("~/Scripts/Equipeelect.js")"></script>
    @Scripts.Render("~/bundles/jqueryval")
}